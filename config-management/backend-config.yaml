apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: ssl-frontend-config
  namespace: istio-system
spec:
  sslPolicy: modern-production-ssl-policy
  redirectToHttps:
    enabled: true
    responseCodeName: "301"
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: ssl-frontend-config
  namespace: istio-telus
spec:
  sslPolicy: modern-production-ssl-policy
  redirectToHttps:
    enabled: true
    responseCodeName: "301"
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: istio-ingressgateway-config
  namespace: istio-system
spec:
  securityPolicy:
    name: owasp-enabled-private-telus-ip-filter-allow
  healthCheck:
    checkIntervalSec: 30
    port: 15021
    type: HTTP
    requestPath: /healthz/ready
    timeoutSec: 20
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: istio-ingressgateway-config
  namespace: istio-telus
spec:
  timeoutSec: 120
  securityPolicy:
    name: owasp-modsecurity-enabled
  healthCheck:
    checkIntervalSec: 10
    port: 15021
    type: HTTP
    requestPath: /healthz/ready
    timeoutSec: 2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.gcp.kubernetes.io/pre-shared-cert: ssl-cert-dev
    networking.gke.io/v1beta1.FrontendConfig: ssl-frontend-config
  name: telus-nw-ingress
  namespace: istio-telus
spec:
  rules:
  - host: '*.dev.n.svc.tv.telus.net'
    http:
      paths:
      - backend:
          service:
            name: ingressgateway-telus
            port:
              number: 80
        path: /*
        pathType: ImplementationSpecific
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.gcp.kubernetes.io/pre-shared-cert: ssl-cert-dev
    networking.gke.io/v1beta1.FrontendConfig: ssl-frontend-config
  name: public-nw-ingress
  namespace: istio-system
spec:
  rules:
  - host: '*.dev.n.svc.tv.telus.net'
    http:
      paths:
      - backend:
          service:
            name: istio-ingressgateway
            port:
              number: 80
        path: /*
        pathType: ImplementationSpecific

